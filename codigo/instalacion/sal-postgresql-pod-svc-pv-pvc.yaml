apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-12-09T18:50:46Z"
  generateName: postgresql-postgresql-
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    controller-revision-hash: postgresql-postgresql-7b7f6856c5
    helm.sh/chart: postgresql-10.13.12
    role: primary
    statefulset.kubernetes.io/pod-name: postgresql-postgresql-0
  name: postgresql-postgresql-0
  namespace: sal-postgresql
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: postgresql-postgresql
    uid: 8361579e-0fdf-4ff3-94a2-3bb2a93589c2
  resourceVersion: "19299"
  uid: ac3fb2a4-6591-4903-8f79-6dab610e80f3
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: primary
              app.kubernetes.io/instance: postgresql
              app.kubernetes.io/name: postgresql
          namespaces:
          - sal-postgresql
          topologyKey: kubernetes.io/hostname
        weight: 1
  automountServiceAccountToken: false
  containers:
  - env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: POSTGRESQL_PORT_NUMBER
      value: "5432"
    - name: POSTGRESQL_VOLUME_DIR
      value: /bitnami/postgresql
    - name: PGDATA
      value: /bitnami/postgresql/data
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: postgresql-password
          name: postgresql
    - name: POSTGRESQL_ENABLE_LDAP
      value: "no"
    - name: POSTGRESQL_ENABLE_TLS
      value: "no"
    - name: POSTGRESQL_LOG_HOSTNAME
      value: "false"
    - name: POSTGRESQL_LOG_CONNECTIONS
      value: "false"
    - name: POSTGRESQL_LOG_DISCONNECTIONS
      value: "false"
    - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
      value: "off"
    - name: POSTGRESQL_CLIENT_MIN_MESSAGES
      value: error
    - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
      value: pgaudit
    image: docker.io/bitnami/postgresql:11.14.0-debian-10-r17
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: postgresql
    ports:
    - containerPort: 5432
      name: tcp-postgresql
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - -e
        - |
          exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
    securityContext:
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /bitnami/postgresql
      name: data
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: postgresql-postgresql-0
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
  serviceAccount: default
  serviceAccountName: default
  subdomain: postgresql-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-postgresql-postgresql-0
  - emptyDir:
      medium: Memory
    name: dshm
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-12-09T18:50:48Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-12-09T18:52:08Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-12-09T18:52:08Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-12-09T18:50:47Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://e409e68e412f080a99511f940e4605cee5a2cc91327b93aad854fbeaee4d4757
    image: bitnami/postgresql:11.14.0-debian-10-r17
    imageID: docker-pullable://bitnami/postgresql@sha256:fb423495b03d7084b6053416d90d5a18dacfc36a877a44aaf25d991343b54bd6
    lastState: {}
    name: postgresql
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-12-09T18:51:59Z"
  hostIP: 192.168.49.2
  phase: Running
  podIP: 172.17.0.5
  podIPs:
  - ip: 172.17.0.5
  qosClass: Burstable
  startTime: "2021-12-09T18:50:48Z"
